// Autogenerated! Do not edit.
#pragma once

typedef char CAnimGraphParamOptionalRef[0x20];
typedef char CAnimGraphParamRef[0x20];
// size is a guess
typedef char CAnimScriptParam[0x08];
typedef char CAnimValue[0x08];
typedef char CAnimVariant[0x11];
typedef char CBitVec[(N + 7) / 8];
typedef char CBufferString[0x10];
typedef char CColorGradient[0x18];
// size doesn't matter. only used as a pointer
typedef char CCompressor[0x01];
typedef char CEntityHandle[0x04];
typedef char CEntityIndex[0x04];
typedef char CEntityOutputTemplate[0x28];
typedef char CGlobalSymbol[0x08];
typedef char CHandle[0x04];
typedef char CKV3MemberNameWithStorage[0x38];
typedef char CNetworkUtlVectorBase[0x18];
typedef char CNetworkedQuantizedFloat[0x08];
typedef char CParticleNamedValueRef[0x40];
typedef char CPiecewiseCurve[0x40];
typedef char CPlayerSlot[0x04];
typedef char CPulseValueFullType[0x10];
typedef char CResourceArray[0x08];
typedef char CResourceName[0xe0];
typedef char CResourceNameTyped[0xe0];
typedef char CResourcePointer[0x08];
// size unknown
typedef char CResourceString[0x08];
typedef char CSmartPropAttributeAngles[0x40];
typedef char CSmartPropAttributeBool[0x40];
typedef char CSmartPropAttributeColor[0x40];
typedef char CSmartPropAttributeFloat[0x40];
typedef char CSmartPropAttributeInt[0x40];
typedef char CSmartPropAttributeMaterialGroup[0x40];
typedef char CSmartPropAttributeModelName[0x40];
typedef char CSmartPropAttributeStateName[0x40];
typedef char CSmartPropAttributeVariableValue[0x40];
typedef char CSmartPropAttributeVector[0x40];
typedef char CSmartPropAttributeVector2D[0x40];
typedef char CSmartPropVariableComparison[0x20];
typedef char CSmartPtr[0x08];
// size unknown. only used in dynamic containers.
typedef char CSoundEventName[0x01];
typedef char CSplitScreenSlot[0x04];
typedef char CStrongHandle[0x08];
typedef char CStrongHandleCopyable[0x08];
// size doesn't matter. only used as a pointer
typedef char CStrongHandleVoid[0x08];
typedef char CTransform[0x20];
typedef char CUtlBinaryBlock[0x18];
typedef char CUtlHashtable[0x20];
typedef char CUtlLeanVector[0x10];
typedef char CUtlLeanVectorFixedGrowable[0x10 + ((sizeof(Ty) < 4) ? 4 : sizeof(Ty))];
typedef char CUtlOrderedMap[0x28];
// size doesn't matter. only used as a pointer
typedef char CUtlPair[0x01];
typedef char CUtlString[0x08];
typedef char CUtlStringToken[0x04];
typedef char CUtlStringTokenWithStorage[0x18];
typedef char CUtlSymbol[0x02];
typedef char CUtlSymbolLarge[0x08];
typedef char CUtlVector[0x18];
typedef char CUtlVectorEmbeddedNetworkVar[0x50];
// size is a guess that fits both occurrences of this type in CS2
typedef char CUtlVectorFixedGrowable[0x18 + ((sizeof(Ty) < 4) ? 4 : sizeof(Ty))];
typedef char CUtlVectorSIMDPaddedVector[0x18];
typedef char CVariantBase[0x10];
typedef char CWeakHandle[0x18];
typedef char C_NetworkUtlVectorBase[0x18];
typedef char C_UtlVectorEmbeddedNetworkVar[0x50];
typedef char Color[0x04];
typedef char DegreeEuler[0x0c];
typedef char FourVectors[0x30];
typedef char HSCRIPT[0x08];
// size doesn't matter. only used as a pointer
typedef char KeyValues[0x01];
typedef char KeyValues3[0x10];
typedef char QAngle[0x0c];
typedef char Quaternion[0x10];
typedef char QuaternionStorage[0x10];
typedef char RadianEuler[0x0c];
typedef char RenderInputLayoutField_t[0x04];
// we don't have a field size for this type. uses the fallback of 1.
typedef char RenderPrimitiveType_t[0x01];
typedef char RotationVector[0x0c];
typedef char SphereBase_t[0x10];
typedef char Vector[0x0c];
typedef char Vector2D[0x08];
typedef char Vector4D[0x10];
typedef char VectorAligned[0x10];
typedef char WorldGroupId_t[0x04];
typedef char float32[0x04];
typedef char fltx4[0x10];
typedef char matrix3x4_t[0x30];
typedef char matrix3x4a_t[0x30];
